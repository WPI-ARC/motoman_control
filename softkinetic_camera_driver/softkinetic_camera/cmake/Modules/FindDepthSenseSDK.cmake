# find depthsensesdk
#
# exports:
#
#   DEPTHSENSESDK_FOUND
#   DEPTHSENSESDK_INCLUDE_DIRS
#   DEPTHSENSESDK_LIBRARIES
#


INCLUDE(FindPackageHandleStandardArgs)

SET(DepthSenseSDK_IncludeSearchPaths
  /opt/softkinetic/DepthSenseSDK/include
)

SET(DepthSenseSDK_LibrarySearchPaths
  /opt/softkinetic/DepthSenseSDK/lib
)

FIND_PATH(DEPTHSENSESDK_INCLUDE_DIRS
  NAMES DepthSense.hxx
  PATHS ${DepthSenseSDK_IncludeSearchPaths}
)
FIND_LIBRARY(DEPTHSENSESDK_LIBRARIES
  NAMES DepthSense
  PATHS ${DepthSenseSDK_LibrarySearchPaths}
)

# Handle the REQUIRED argument and set the <UPPERCASED_NAME>_FOUND variable
FIND_PACKAGE_HANDLE_STANDARD_ARGS(DepthSenseSDK "Could NOT find DepthSense SDK"
  DEPTHSENSESDK_LIBRARIES
  DEPTHSENSESDK_INCLUDE_DIRS
)

IF(DEPTHSENSESDK_FOUND)
  FIND_PACKAGE_MESSAGE(DEPTHSENSESDK_FOUND "Found DepthSense SDK" "[${DEPTHSENSESDK_LIBRARIES}][${DEPTHSENSESDK_INCLUDE_DIRS}]")
ELSE(DEPTHSENSESDK_FOUND)
  SET(DEPTHSENSESDK_INCLUDE_DIRS "")
  SET(DEPTHSENSESDK_LIBRARIES "")
ENDIF(DEPTHSENSESDK_FOUND)

MARK_AS_ADVANCED(
  DEPTHSENSESDK_INCLUDE_DIRS
  DEPTHSENSESDK_LIBRARIES
)
