<launch>
  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->
  <include file="$(find apc_vision)/launch/apc_vision.launch"/>
  <include file="$(find grasp_logic)/launch/grasp_logic.launch"/>
  <node name="move_group_server" pkg="motoman_moveit" type="move_group_server" output="screen"/>
  <rosparam command="load" file="$(find motoman_sda10f_support)/config/joint_names_sda10f.yaml"/>
 
  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a robot_ip and controller(fs100|dx100) arguments is required -->
  <arg name="robot_ip" default="10.0.0.2" />
  <arg name="controller" default="fs100" />
  <arg name="version0" default="false" />

  <rosparam param="/move_group/trajectory_execution/execution_duration_monitoring">true</rosparam>  
 
  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find motoman_sda10f_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_7_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
    <include file="$(find motoman_sda10f_support)/launch/robot_interface_streaming_sda10f.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
      <arg name="controller" value="$(arg controller)"/>
      <arg name="version0" value="$(arg version0)" />
    </include>

  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find motoman_sda10f_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find motoman_sda10f_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>
  
  <include file="$(find motoman_sda10f_moveit_config)/launch/default_warehouse_db.launch" />

  <!-- Publish shelf model -->

<!--
<node pkg="apc_models" type="publish_mesh.py" name="publish_pod"
        args="kiva_pod $(find apc_models)/meshes/pod_lowres.stl -1.2 0 -0.045 0.5 0.5 0.5 0.5" />
-->
<!--
<node pkg="apc_models" type="publish_mesh.py" name="publish_pod"
        args="kiva_pod $(find apc_models)/meshes/pod_lowres.stl 1.28 0 -0.045 0.5 0.5 0.5 0.5" />
-->
<node pkg="apc_models" type="publish_box.py" name="publish_wall"
        args="wall -.8 0 1.5 0 0 0 1 .1 5 3" />



  <!--<node pkg="apc_models" type="publish_mesh.py" name="publish_pod"
        args="kiva_pod $(find apc_models)/meshes/kiva_shelf.stl 1.28 0 -0.045 0.5 0.5 0.5 0.5" /> -->

  <!--<node pkg="trajectory_srv" type="trajectory_server.py" name="trajectory_server" output="screen"/>-->
  <node pkg="grasp_logic" type="SModelTcpNode.py" name="gripper_tcp_node" args="10.0.0.10"/>
  <node pkg="gripper_srv" type="gripper_controller.py" name="gripper_server"/>
  <!-- <node name="get_glue" pkg="motoman_moveit" type="get_glue" respawn="false" output="screen"/> -->

</launch>
