<launch>
  <node name="convert_trajectory_server" pkg="motoman_moveit" type="convert_trajectory_server" output="screen"/>
    <arg name="speed" default="slow" />
    
  <!-- Vision Code -->
  <include file="$(find apc_vision)/launch/apc_vision.launch"/>

  <!-- Grasping and Gripper Cade -->
  <include file="$(find grasp_logic)/launch/grasp_logic.launch"/>
  <node ns="left" pkg="grasp_logic" type="SModelTcpNode.py" name="gripper_tcp_node" args="10.0.0.10"/>
  <node ns="left" pkg="gripper_srv" type="gripper_controller.py" name="gripper_server"/>

  <rosparam command="load" file="$(find motoman_sda10f_support)/config/joint_names_sda10f.yaml"/>
 
  <arg name="robot_ip" default="10.0.0.2" />
  <arg name="controller" default="fs100" />
  <arg name="version0" default="false" />

  <rosparam param="/move_group/trajectory_execution/execution_duration_monitoring">true</rosparam>  
 
  <!-- Load the robot_description parameter before launching ROS-I nodes 
  <include file="$(find motoman_sda10f_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
    <arg name="joint_limits"
         value="$(find motoman_sda10f_moveit_config)/config/joint_limits_$(arg speed).yaml" />
  </include> -->

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_7_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
    <include file="$(find motoman_sda10f_support)/launch/robot_interface_streaming_sda10f.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
      <arg name="controller" value="$(arg controller)"/>
      <arg name="version0" value="$(arg version0)" />
    </include>

  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find motoman_sda10f_moveit_config)/launch/move_group.launch">
    <arg name="load_robot_description" value="true" />
    <arg name="joint_limits"
         value="$(find motoman_sda10f_moveit_config)/config/joint_limits_$(arg speed).yaml" />
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <!-- RViz -->
  <include file="$(find motoman_sda10f_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>

  <!-- Publish shelf model -->
  <node pkg="apc_models" type="publish_lab.py" name="publish_lab" />
  <!--
<node pkg="apc_models" type="publish_boxshelf.py" name="publish_boxshelf" />
    -->
</launch>
